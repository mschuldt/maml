# This uses an LED on pin 13 and a ping distance sensor on pin 53
# Arduino library functions used here are declared in
# arduino_only_primitives.c, which also contains the function
# 'get_distance' that supports this example.

# run with:
#   python3 -i maml.py -a distance.maml

arduino = Arduino(desktop=False)

@block(once)
def setup():
    on_p = 0
    pinMode(13, 1)
    led_on = 1

@block(chain)
def delay_and_update():
    d = 0
    while True:
        distance = get_distance() * 3  # distance in cm
        if d > distance:
            on_p = 1 - on_p
            digitalWrite(13, on_p*led_on)
            break
        _delay(10)
        d += 10

arduino.send(setup)
arduino.send(delay_and_update)

# NOW YOU CAN INTERACTIVELY SET THE VARIABLE VALUES IN THE VM:
#>>> arduino.set("led_on", 0)
#>>> arduino.set("led_on", 1)
#
# OR GET THE VALUES:
#>>> arduino.get("distance")
#
# OR PAUSE THE VM:
#>>> arduino.pause()
#
# AND RESUME IT AGAIN
#>>> arduino.resume()
#
# DUMP THE VM ENVIRONMENT:
#>>> arduino.dump()
